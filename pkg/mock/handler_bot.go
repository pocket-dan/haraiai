// Code generated by MockGen. DO NOT EDIT.
// Source: bot.go

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBotHandler is a mock of BotHandler interface.
type MockBotHandler struct {
	ctrl     *gomock.Controller
	recorder *MockBotHandlerMockRecorder
}

// MockBotHandlerMockRecorder is the mock recorder for MockBotHandler.
type MockBotHandlerMockRecorder struct {
	mock *MockBotHandler
}

// NewMockBotHandler creates a new mock instance.
func NewMockBotHandler(ctrl *gomock.Controller) *MockBotHandler {
	mock := &MockBotHandler{ctrl: ctrl}
	mock.recorder = &MockBotHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBotHandler) EXPECT() *MockBotHandlerMockRecorder {
	return m.recorder
}

// HandleWebhook mocks base method.
func (m *MockBotHandler) HandleWebhook(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleWebhook", arg0, arg1)
}

// HandleWebhook indicates an expected call of HandleWebhook.
func (mr *MockBotHandlerMockRecorder) HandleWebhook(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleWebhook", reflect.TypeOf((*MockBotHandler)(nil).HandleWebhook), arg0, arg1)
}
